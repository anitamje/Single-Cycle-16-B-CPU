module ALU_Control(
input [1:0] ALUOp,
input [3:0] Funksioni,
input [2:0] Opcode,
output reg [3:0] ALUCtrl
);

always @(ALUOp)
begin
case(ALUOp) // Pyet per vleren e ALUOp, 00-lw,sw; 01-beq,bne, 10-R-format, 11 - I-format
    2'b00: ALUCtrl = 4'b0010; //ADD
    2'b01: ALUCtrl = 4'b0110; //SUB
    2'b10: //R-Format
        case(Funksioni)
            4'b1101: ALUCtrl = 4'b1010; //XOR
            4'b0000: ALUCtrl = 4'b0010; //ADD
            4'b0001: ALUCtrl =4'b0110; //SUB
            4'b0010 : ALUCtrl =4'b0111; //MOD
        endcase

    2'b11: //I-format
        case(Opcode)
            3'b011: ALUCtrl = 4'b0010; // per ADDI
            3'b001: ALUCtrl = 4'b0000; // per ANDI
            //3'b010: ALUCtrl = 4'b; // per ORI
            //3'b100: ALUCtrl = 4'b0000; // per SLTI


        endcase
endcase
end
